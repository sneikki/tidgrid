/*
 * grid/cell.scss
 */

@use "namespace";
@use "mode";
@use "static";
@use "variant";
@use "row";

@include static.element(cell) {
  @include mode.stacked;

  box-sizing: border-box;
}

@include variant.generate($with: namespace.use-prefix(cell)) {
  @include variant.declare(mode, auto) {
    @include mode.auto;
  }

  @include variant.declare(mode, stacked) {
    @include mode.stacked;
  }

  @include variant.declare(mode, thin) {
    @include mode.thin;
  }

  @include variant.declare(mode, fill) {
    @include mode.fill;
  }

  @include variant.declare(order, first) {
    order: -2;
  }

  @include variant.declare(order, last) {
    order: 2;
  }

  @include variant.declare(order, none) {
    order: unset;
  }

  @include mode.frac(row.$fractions) using ($value, $cell-width) {
    @include variant.declare(frac, $value) {
      width: $cell-width;
      flex: none;
    }
  }

  @each $row-size in row.$row-sizes {
    @include mode.span($row-size) using ($value, $cell-width) {
      @include variant.declare(span, $value) {
        width: $cell-width;
        flex: none;
      }
    }
  }
}
